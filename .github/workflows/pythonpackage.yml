# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
    tags:
    - '*'

jobs:
  installation:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: |
        pip install poetry
#        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
#        echo "::add-path::$HOME/.poetry/bin"
      shell: bash
    - name: Set poetry env
      run: |
        python -m poetry install --no-root --no-dev --extras taskipy
      shell: bash
    - name: Install package artifact
      run: |
        python -m taskipy.cli build -f sdist
        pip install dist/cyrtd*
        pip uninstall dxfeed
      shell: bash
  build:
    needs: installation
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.5, 3.6, 3.7, 3.8]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
      shell: bash
    - name: Set poetry env
      run: poetry install --no-root
      shell: bash
    - name: Run tests
      run: |
        task test
    - name: Generate doc
      run: |
        task html_docs
      if: matrix.os == 'ubuntu-latest'
#       send zip after generation

  publishing:
    needs: [installation, build]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.7]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
      shell: bash
    - name: Set poetry env
      run: poetry install --no-root --no-dev --extras "taskipy"
      shell: bash
    - name: Publish to PyPI
      run: |
        task build
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry publish -r testpypi -u ${{ secrets.PYPI_USERNAME }} -p ${{ secrets.PYPI_PASSWORD }}
